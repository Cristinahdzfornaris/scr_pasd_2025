version: '3.8' # Especifica una versión de Compose

services:
  ray-head:
    build: .
    container_name: ray-head
    command: |
     bash -c "ray start --head --port=6379 --dashboard-host=0.0.0.0 --include-dashboard=true --ray-client-server-port=10001 && echo 'Nodo HEAD en marcha. Dashboard: http://localhost:8265. Ray Client: localhost:10001' && tail -f /dev/null"
    ports:
      - "6379:6379"
      - "8265:8265"
      - "10001:10001" # Puerto para Ray Client
    networks:
      - ray-net
    shm_size: 1gb # Ajusta según tu sistema y necesidades
    # cpus: 2 # Opcional: Descomenta y ajusta si quieres limitar CPUs
    volumes:
      - .:/app # Monta el directorio actual del host en /app del contenedor

  ray-worker-1:
    build: .
    container_name: ray-worker-1
    command: bash -c "
      ray start --address=ray-head:6379 &&
      echo 'Worker 1 conectado al HEAD' &&
      tail -f /dev/null"
    depends_on:
      - ray-head
    networks:
      - ray-net
    shm_size: 1gb
    # cpus: 1 # Opcional
    volumes:
      - .:/app

  ray-worker-2:
    build: .
    container_name: ray-worker-2
    command: bash -c "
      ray start --address=ray-head:6379 &&
      echo 'Worker 2 conectado al HEAD' &&
      tail -f /dev/null"
    depends_on:
      - ray-head
    networks:
      - ray-net
    shm_size: 1gb
    # cpus: 1 # Opcional
    volumes:
      - .:/app

  # NUEVO SERVICIO PARA RAY SERVE
  serve-app:
    build: .
    container_name: serve-app
    command: |
      bash -c "
        echo 'Esperando a que el clúster Ray esté listo...' &&
        sleep 10 &&
        echo 'Iniciando Ray Serve application (serve_ray.py)...' &&
        serve run serve_ray:deployment_graph && # <--- MODIFICADO: Sin --host y --port
        echo 'Comando serve run finalizado (si esto aparece rápido, podría ser un problema, o éxito si se queda corriendo y sirve)' &&
        tail -f /dev/null
      "
    depends_on:
      - ray-head
    ports:
      - "8001:8000" # Esto es correcto, Ray Serve usará el puerto 8000 internamente por defecto
    networks:
      - ray-net
    shm_size: 1gb
    volumes:
      - .:/app # Para que pueda acceder a serve_ray.py y a los modelos guardados

networks:
  ray-net:
    driver: bridge # Define el tipo de red (bridge es el por defecto y está bien aquí)